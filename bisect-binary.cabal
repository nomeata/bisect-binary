name:                bisect-binary
version:             0.1.0.1
synopsis:            Determine relevant parts of binary data
description:
     This little program helps with the following task:
     .
     You need to analyse some binary file (e.g., the firmware for some
     microcontroller). You want to understand how it does certain things, but the
     file is big. One approach to help you in the process is to erase parts of the file
     (by overwriting it with binary zeros) and see if the file still does what it
     should be doing. If it does, then you know that the interesting parts are in
     another part of the file.
     .
     `binary-binary` assists in this process by doing the book-keeping and zeroing
     out parts of the file.
homepage:            http://github.com/nomeata/bisect-binary
license:             MIT
license-file:        LICENSE
author:              Joachim Breitner
maintainer:          mail@joachim-breitner.de
copyright:           2017 Joachim Breitner
category:            Development
build-type:          Simple
extra-source-files:  ChangeLog.md, README.md
cabal-version:       >=1.10
tested-with:         GHC ==8.0.2, GHC ==8.2.2

executable bisect-binary
  main-is:             Main.hs
  other-modules:       Intervals, Braille
  other-extensions:    LambdaCase, DeriveGeneric
  build-depends:       base >=4.9 && <4.12
  build-depends:       bytestring
  build-depends:       directory
  build-depends:       filepath
  build-depends:       optparse-applicative >=0.13 && <0.14
  build-depends:       yaml >=0.8 && <0.9
  build-depends:       haskeline >=0.7 && <0.8
  build-depends:       time
  build-depends:       hashable
  build-depends:       integer-logarithms
  build-depends:       terminal-size
  build-depends:       process
  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options:         -Wall -Wno-name-shadowing

source-repository head
  type:     git
  location: https://github.com/nomeata/bisect-binary

